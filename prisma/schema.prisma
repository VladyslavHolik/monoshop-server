// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
   previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  fullName  String
  password  String?
  items     Item[]  @relation("items")
  location  String?
  phone     String?
  image     String  @default("https://t4.ftcdn.net/jpg/01/86/29/31/360_F_186293166_P4yk3uXQBDapbDFlR17ivpM6B1ux0fHG.jpg")
  role      Role    @default(USER)
  favorites Item[]  @relation("favorites")
  currentHashedRefreshToken String?
  isRegisteredWithGoogle Boolean @default(false)
  room      Room[] 
  message Message[]
  lastActivity DateTime @default(now())
  stripeCustomerId String?
}

model Order {
  id String @unique
  sellerId String
  city String
  country String
  line1 String
  line2 String?
  postalCode String
  state String
  customerId String
  fullName String
  phone String
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  WOMEN
  MEN
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

model Item {
  id            Int      @id @default(autoincrement())
  user          User     @relation("items", fields: [userId], references: [id])
  userId        Int
  favoriteUsers User[]   @relation("favorites")
  style         Style    @relation(fields: [styleId], references: [id])
  styleId       Int
  images        String[]
  price         Int
  description String?
  views Int @default(1)
  size          Size 
  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    Int
  subcategory      Subcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId    Int
  brand         Brand[]    
  colour        Colour   @relation(fields: [colourId], references: [id])
  colourId      Int
  condition     Int
  gender Gender
  name String
  hashtags String[] @default([])
  room Room? @relation(fields: [roomId], references: [id]) 
  roomId Int? @unique
}

model Colour {
  id   Int    @id @default(autoincrement())
  value String @unique
  hexCode String @unique
  item Item[]
}

model Category {
  id   Int    @id @default(autoincrement())
  value String 
  item Item[]
  gender Gender
  subcategory Subcategory[]
}

model Subcategory {
  id Int @id @default(autoincrement())
  value String
    category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  item Item[]
}

model Style {
  id   Int    @id @default(autoincrement())
  value String @unique
  item Item[]
  image String?
}

model Brand {
  id   Int    @id @default(autoincrement())
  value String @unique
  item Item[]
  image String?
}

model Room {
  id   Int    @id @default(autoincrement())
  users User[] 
  message Message[] 
  item Item?
}

model Message {
  id   Int    @id @default(autoincrement())
  text String
  room Room @relation(fields: [roomId], references: [id])
  roomId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  delivered Boolean @default(false)
  markedSeen Boolean @default(false)
  date DateTime @default(now())
}
